CREATE DATABASE Quan_ly_thu_vien_phim;
USE Quan_ly_thu_vien_phim;

CREATE TABLE COUNTRIES(
	COUNTRY_ID INT PRIMARY KEY IDENTITY(1,1),
	COUNTRY_NAME NVARCHAR(30)
);
INSERT INTO COUNTRIES (COUNTRY_NAME) 
VALUES  (N'Tất cả'),
		(N'Việt Nam'),
		(N'Trung Quốc'), 
	    (N'Hàn Quốc'), 
		(N'Nhật Bản'), 
		(N'Âu Mỹ'), 
		(N'Thái Lan'), 
		(N'Đài Loan'), 
		(N'Tổng hợp'), 
		(N'Hồng Kông'), 
		(N'Ấn Độ');
CREATE TABLE GENRES(
	GENRE_ID INT PRIMARY KEY IDENTITY(1,1),
	GENRE_NAME NVARCHAR(30)
);
INSERT INTO GENRES (GENRE_NAME)
VALUES 
	(N'Tất cả'),
    (N'Hành Động'),
    (N'Võ Thuật'),
    (N'Tình Cảm'),
    (N'Hoạt Hình'),
    (N'Hài Hước'),
    (N'Viễn Tưởng'),
    (N'Cổ Trang'),
    (N'Phiêu Lưu'),
    (N'Tâm Lý'),
    (N'Khoa Học'),
    (N'Hình Sự'),
    (N'Ma - Kinh Dị'),
    (N'Chiến Tranh'),
    (N'Âm Nhạc'),
    (N'Thể Thao'),
    (N'Thần Thoại');
CREATE TABLE FORMATS(
	FORMAT_ID INT PRIMARY KEY IDENTITY(1,1),
	FORMAT_NAME NVARCHAR(30)
);
INSERT INTO FORMATS (FORMAT_NAME)
VALUES (N'Tất cả'),(N'Phim bộ'),(N'Phim lẻ')
	

CREATE TABLE MOVIES (
    MOVIE_ID INT PRIMARY KEY IDENTITY(1,1),
    TITLE NVARCHAR(255) ,
	RELEASE_YEAR INT,
    GENRE_ID  INT FOREIGN KEY REFERENCES GENRES(GENRE_ID),
	FORMAT_ID INT FOREIGN KEY REFERENCES FORMATS(FORMAT_ID),
	COUNTRY_ID  INT FOREIGN KEY REFERENCES COUNTRIES(COUNTRY_ID),
    DIRECTOR NVARCHAR(255),
	CAST NVARCHAR (255),
    RATING DECIMAL(2, 1),
    DESCRIPTION TEXT,
    TOTAL_EPISODES INT,
    COVER_IMAGE VARCHAR (255),
	TRAILER  VARCHAR (255)
);
ALTER TABLE MOVIES
ADD MovieVip bit;
ALTER TABLE MOVIES
ADD CONSTRAINT DF_MOVIES_MovieVip DEFAULT 0 FOR MovieVip;

CREATE TABLE EPISODES(
	EPISODE_ID INT PRIMARY KEY IDENTITY(1,1),
	EPISODE_NAME  NVARCHAR(MAX),
	MOVIE_ID INT FOREIGN KEY REFERENCES MOVIES(MOVIE_ID),
	VIDEO  VARCHAR (255)
);
CREATE TABLE USERS (
	USER_ID INT PRIMARY KEY IDENTITY(1,1),
    USERNAME VARCHAR(50)  ,
	BIRTH DATE,
	GENDER NVARCHAR(10),
    EMAIL VARCHAR(100) ,
    PASSWORD VARCHAR(255) ,
	VERIFYCODE VARCHAR(255) ,
	STATUS VARCHAR(255),
);

CREATE TABLE ADMIN(
	USERNAME VARCHAR(50) PRIMARY KEY ,
	PASSWORD VARCHAR(255),
);
CREATE TABLE REVIEWS (
    REVIEW_ID INT PRIMARY KEY IDENTITY(1,1),
    MOVIE_ID INT FOREIGN KEY REFERENCES MOVIES(MOVIE_ID),
    USER_ID  INT FOREIGN KEY REFERENCES USERS(USER_ID ),
    RATING INT ,
    COMMENT NVARCHAR(MAX) ,
    REVIEW_DATE DATETIME DEFAULT getdate(),
	REPLY NVARCHAR(MAX),
);  

CREATE TABLE FAVORITES (
    FAVORITE_ID INT PRIMARY KEY IDENTITY(1,1),
    USER_ID  INT FOREIGN KEY  REFERENCES USERS(USER_ID ),
    MOVIE_ID INT  FOREIGN KEY REFERENCES MOVIES(MOVIE_ID),
);

CREATE TABLE Subscription_Plans (
    plan_id INT IDENTITY(1,1) PRIMARY KEY,
    plan_name NVARCHAR(50) NOT NULL,
    price DECIMAL(10,2) NOT NULL,
    duration_days INT NOT NULL,
    description NVARCHAR(MAX)
);
ALTER TABLE Subscription_Plans 
ADD MOVIE_ID INT  FOREIGN KEY REFERENCES MOVIES(MOVIE_ID)

CREATE TABLE User_Subscriptions (
    subscription_id INT IDENTITY(1,1) PRIMARY KEY,
    user_id INT FOREIGN KEY REFERENCES Users(user_id),
    plan_id INT FOREIGN KEY REFERENCES Subscription_Plans(plan_id),
    start_date DATE,
    end_date DATE,
    is_active BIT DEFAULT 1
);
CREATE TABLE Payment_Methods (
    method_id INT IDENTITY(1,1) PRIMARY KEY,
    method_name NVARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE Orders (
    order_id INT IDENTITY(1,1) PRIMARY KEY,
    user_id INT FOREIGN KEY REFERENCES Users(user_id),
    plan_id INT FOREIGN KEY REFERENCES Subscription_Plans(plan_id),
    amount DECIMAL(10,2),
    method_id INT FOREIGN KEY REFERENCES Payment_Methods(method_id),
    payment_status NVARCHAR(20) NOT NULL CHECK (payment_status IN ('pending', 'completed', 'failed')),
    order_date DATETIME DEFAULT GETDATE()
);

SELECT * FROM User_Subscriptions
SELECT COUNT(*) 
FROM User_Subscriptions 
WHERE user_id = 28 
      AND is_active = 1
      AND GETDATE() BETWEEN start_date AND end_date




SELECT * FROM USERS
SELECT * FROM USERS WHERE USERNAME=@username AND PASSWORD=@password

SELECT SCOPE_IDENTITY()
INSERT INTO Users (Username, Email)

-- Lấy giá trị IDENTITY vừa tạo
SELECT SCOPE_IDENTITY() AS NewUserID;
SELECT SCOPE_IDENTITY()

SELECT FAVORITE_ID, USER_ID, TITLE, RELEASE_YEAR FROM FAVORITES, MOVIES WHERE MOVIES.MOVIE_ID = FAVORITEs.MOVIE_ID AND USER_ID = 28

SELECT FAVORITE_ID, USER_ID, TITLE, RELEASE_YEAR FROM FAVORITES, MOVIES WHERE MOVIES.MOVIE_ID = FAVORITEs.MOVIE_ID AND USER_ID = @userId
SELECT USER_ID, USERNAME, GENDER, BIRTH, EMAIL FROM USERS WHERE USER_ID = 28

SELECT Review_ID, USERNAME, REVIEW_DATE, REVIEWS.RATING, COMMENT, COVER_IMAGE, TITLE, RELEASE_YEAR, REPLY 
                         FROM USERS, REVIEWS, MOVIES 
                        WHERE REVIEWS.MOVIE_ID = MOVIES.MOVIE_ID AND REVIEWS.USER_ID = USERS.USER_ID AND REVIEW_ID = 1

						SELECT Review_ID, USERNAME, REVIEW_DATE, REVIEWS.RATING, COMMENT, COVER_IMAGE, TITLE, RELEASE_YEAR, REPLY
FROM USERS, REVIEWS, MOVIES
WHERE REVIEWS.MOVIE_ID = MOVIES.MOVIE_ID 
AND REVIEWS.USER_ID = USERS.USER_ID 
AND REVIEW_ID = 6

SELECT MOVIE_ID, TITLE, RATING, COVER_IMAGE, DESCRIPTION FROM MOVIES

SELECT MOVIE_ID, TITLE, RATING, COVER_IMAGE, DESCRIPTION FROM MOVIES JOIN FORMATS ON MOVIES.FORMAT_ID = FORMATS.FORMAT_ID
                            WHERE FORMAT_NAME = N'Phim bộ'

SELECT MOVIE_ID, TITLE, RATING, COVER_IMAGE, DESCRIPTION
FROM MOVIES, GENRES 
WHERE MOVIES.GENRE_ID = GENRES.GENRE_ID  AND GENRES.GENRE_ID = 2

SELECT MOVIE_ID, TITLE, RELEASE_YEAR, RATING, COVER_IMAGE, DESCRIPTION
FROM MOVIES, COUNTRIES, GENRES, FORMATS
WHERE MOVIES.COUNTRY_ID = COUNTRIES.COUNTRY_ID
AND MOVIES.GENRE_ID = GENRES.GENRE_ID
AND MOVIES.FORMAT_ID = FORMATS.FORMAT_ID
AND (GENRES.GENRE_ID = 1 OR 1 = 1)
AND (COUNTRIES.COUNTRY_ID = 1 OR 1 = 1)
AND (FORMATS.FORMAT_ID = 1 OR 1 = 1)

SELECT 
    M.MovieVip,
    US.is_active,
    US.end_date
FROM 
    MOVIES M
LEFT JOIN 
    Subscription_Plans SP ON M.MOVIE_ID = SP.MOVIE_ID
LEFT JOIN 
    User_Subscriptions US ON SP.plan_id = US.plan_id AND US.user_id = 28
WHERE 
    M.MOVIE_ID = 8

	
